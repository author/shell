name: Tag, Release, & Publish

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        # Checkout updated source code
      - uses: actions/checkout@v2
    
        # If the version has changed, create a new git tag for it.
      - name: Tag
        id: autotagger
        uses: butlerlogic/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    
        # The remaining steps all depend on whether or not
        # a new tag was created. There is no need to release/publish 
        # updates until the code base is in a releaseable state.

        # If the new version/tag is a pre-release (i.e. 1.0.0-beta.1), create
        # an environment variable indicating it is a prerelease.
      - name: Pre-release
        if: steps.autotagger.outputs.tagname != ''
        run: |
          if [[ "${{ steps.autotagger.output.version }}" == *"-"* ]]; then echo "::set-env IS_PRERELEASE=true";else echo "::set-env IS_PRERELEASE=''";fi
    
        # Create a github release
        # This will create a snapshot of the module,
        # available in the "Releases" section on Github.
      - name: Release
        id: create_release
        if: steps.autotagger.outputs.tagname != ''
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: steps.autotagger.outputs.tagname
          release_name: steps.autotagger.outputs.tagname
          body: steps.autotagger.outputs.tagmessage
          draft: false
          prerelease: env.IS_PRERELEASE != ''

      - uses: actions/setup-node@v1
        with:
          node-version: '13'

        # Build tarballs of the module code.
      - name: Build Release Artifacts
        id: build
        if: steps.autotagger.outputs.tagname != ''
        run: |
          cd ./build && npm install && cd ../
          npm run build --if-present
          for d in .dist/*/*/ ; do tar -cvzf ${d%%/}-x.x.x.tar.gz ${d%%}*; done;
          if [[ ${{ github.ref }} == *"-"* ]]; then echo ::set-output isprerelease=true;else echo ::set-output isprerelease=false;fi
      
        # Upload tarballs to the release.
      - name: Upload Release Artifacts
        uses: AButler/upload-release-assets@v2.0
        if: steps.autotagger.outputs.tagname != ''
        with:
          files: './.dist/**/*.tar.gz'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.autotagger.outputs.tagname }}

        # Use this action to publish a single module to npm.
      - name: Publish
        id: publish
        if: steps.autotagger.outputs.tagname != ''
        uses: author/action-publish@stable
        with:
          scan: .dist
        env: 
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

      - name: Rollback Release
        if: failure() && steps.create_release.outputs.id != ''
        uses: author/action-rollback@stable
        with:
          tag: ${{ steps.autotagger.outputs.tagname }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
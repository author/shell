{"version":3,"file":"index.js","sources":["../../src/middleware.js","../../src/format.js","../../src/base.js","../../src/utility.js","../../src/shell.js","../../src/command.js","../../src/index.js"],"sourcesContent":["export default class Middleware {\n  constructor () {\n    Object.defineProperties(this, {\n      _data: { enumerable: false, configurable: false, value: [] },\n      go: { enumerable: false, configurable: false, writable: true, value: (...args) => { args.pop().apply(this, args) } }\n    })\n  }\n\n  get size () { return this._data.length }\n\n  get data () { return this._data }\n\n  use (method) {\n    const methodBody = method.toString()\n    if (methodBody.indexOf('[native code]') < 0) {\n      this._data.push(methodBody)\n    }\n\n    this.go = (stack => (...args) => {\n      const next = args.pop()\n      stack(...args, () => {\n        method.apply(this, [...args, next.bind(null, ...args)])\n      })\n    })(this.go)\n  }\n\n  run () {\n    const args = Array.from(arguments)\n    if (args.length === 0 || typeof args[args.length - 1] !== 'function') {\n      args.push(() => {})\n    }\n\n    this.go(...args)\n  }\n}\n","import Table from '@author.io/table'\nimport Command from './command.js'\nimport Shell from './shell.js'\n\nclass Formatter {\n  #data = null\n  #tableWidth = 80\n  #colAlign = [] // Defaults to ['l', 'l', 'l']\n  #colWidth = ['20%', '15%', '65%']\n\n  constructor (data) {\n    this.#data = data\n  }\n\n  set width (value) {\n    this.#tableWidth = value < 20 ? 20 : value\n  }\n\n  set columnWidths (value) {\n    this.#colWidth = value\n  }\n\n  set columnAlignment (value) {\n    this.#colAlign = value\n  }\n\n  get usage () {\n    const desc = this.#data.description.trim()\n\n    if (this.#data instanceof Command) {\n      const aliases = this.#data.aliases\n      const out = [`${this.#data.commandroot}${aliases.length > 0 ? '|' + aliases.join('|') : ''}${this.#data.__flagConfig.size > 0 ? ' [FLAGS]' : ''}${this.#data.arguments.size > 0 ? ' ' + Array.from(this.#data.arguments).map(i => '<' + i + '>').join(' ') : ''}`]\n\n      if (this.#data.__processors.size > 0) {\n        out[out.length - 1] += (this.#data.arguments.size > 0 || this.#data.__flagConfig.size > 0 ? ' |' : '') + ' [COMMAND]'\n      }\n\n      if (desc.trim().length > 0 && out !== desc) {\n        out.push(new Table([[desc.trim().replace(/\\n/gi, '\\n  ')]], null, null, this.#tableWidth, [2, 0, 1, 1]).output)\n      }\n\n      return out.join('\\n')\n    } else if (this.#data instanceof Shell) {\n      return `${this.#data.name}${this.#data.__processors.size > 0 ? ' [COMMAND]' : ''}\\n${desc.trim().length > 0 ? new Table([[desc.trim().replace(/\\n/gi, '\\n  ')]], null, null, this.#tableWidth, [2, 0, 1, 1]).output : ''}${this.#data.arguments.size > 0 ? ' ' + Array.from(this.#data.arguments).map(i => '[' + i + ']').join(' ') : ''}\\n`.trim()\n    }\n\n    return ''\n  }\n\n  get subcommands () {\n    const rows = Array.from(this.#data.__processors.values()).map(cmd => {\n      const nm = [cmd.name].concat(cmd.aliases)\n      return [nm.join('|'), cmd.description]\n    })\n\n    const result = []\n\n    if (rows.length > 0) {\n      const table = new Table(rows, this.#colAlign, ['25%', '75%'], this.#tableWidth, [2])\n      result.push('\\nCommands:\\n')\n      result.push(table.output)\n    }\n\n    return result.join('\\n')\n  }\n\n  get help () {\n    const usage = this.usage.trim()\n\n    if (this.#data instanceof Command) {\n      const flags = this.#data.__flagConfig\n      const rows = []\n\n      if (flags.size > 0) {\n        flags.forEach((cfg, flag) => {\n          let aliases = Array.from(cfg.aliases || cfg.alias || [])\n          aliases = aliases.length === 0 ? '' : '[' + aliases.map(a => `-${a}`).join(', ') + ']'\n\n          let dsc = [cfg.description || '']\n\n          if (cfg.hasOwnProperty('options') && this.#data.describeOptions) { // eslint-disable-line no-prototype-builtins\n            dsc.push(`Options: ${cfg.options.join(', ')}.`)\n          }\n\n          if (cfg.hasOwnProperty('allowMultipleValues') && cfg.allowMultipleValues === true && this.#data.describeMultipleValues) { // eslint-disable-line no-prototype-builtins\n            dsc.push('Can be used multiple times.')\n          }\n\n          if (cfg.hasOwnProperty('default') && this.#data.describeDefault) { // eslint-disable-line no-prototype-builtins\n            dsc.push(`(Default: ${cfg.default.toString()})`)\n          }\n\n          if (cfg.hasOwnProperty('required') && cfg.required === true && this.#data.describeRequired) { // eslint-disable-line no-prototype-builtins\n            dsc.unshift('Required.')\n          }\n\n          dsc = dsc.join(' ').trim()\n\n          rows.push(['--' + flag, aliases || '', dsc || ''])\n        })\n      }\n\n      const table = new Table(rows, this.#colAlign, this.#colWidth, this.#tableWidth, [2, 0, usage.length > 0 ? 1 : 0, 0])\n\n      let subcommands = '\\n' + this.subcommands\n      if (subcommands.trim().length === 0) {\n        subcommands = ''\n      }\n      return usage + (flags.size > 0 ? '\\n\\nFlags:\\n' + table.output : '') + subcommands\n    } else if (this.#data instanceof Shell) {\n      return [usage, this.subcommands].join('\\n')\n    }\n\n    return ''\n  }\n}\n\nexport { Formatter as default, Formatter, Table }\n","import Middleware from './middleware.js'\nimport Formatter from './format.js'\nimport Shell from './shell.js'\nimport Command from './command.js'\n\nexport default class Base {\n  #plugins = {}\n  #url = null\n  #support = null\n  #formattedDefaultHelp\n  #description\n  #customUsage\n  #customHelp\n  #arguments = new Set()\n  #autohelp = true\n  #processors = new Map()\n  #commands = new Map()\n  #width = 80\n  #name = 'Unknown'\n  #middleware = new Middleware()\n  #trailer = new Middleware()\n  #commonflags = {}\n  #display = {\n    // These are all null, representing they're NOT configured.\n    Default: null,\n    Options: null,\n    MultipleValues: null,\n    Required: null\n  }\n\n  #hasCustomDefaultHandler = false\n\n  #defaultHandler = function (meta) {\n    if (this.parent !== null && this.parent.hasCustomDefaultHandler) {\n      return this.parent.defaultHandler(...arguments)\n    } else if (this.shell && this.shell !== null && this.shell.hasCustomDefaultHandler) {\n      return this.shell.defaultHandler(...arguments)\n    }\n\n    if (this.#autohelp) {\n      console.log(this.help)\n    }\n  }\n\n  constructor (cfg = {}) {\n    if (typeof cfg !== 'object') {\n      throw new Error('Invalid command configuration. Expected an object.')\n    }\n\n    if (!cfg.hasOwnProperty('name')) { // eslint-disable-line no-prototype-builtins\n      throw new Error('Invalid command configuration. A \"name\" attribute is required.')\n    }\n\n    if (cfg.hasOwnProperty('help')) { // eslint-disable-line no-prototype-builtins\n      this.#customHelp = cfg.help\n    }\n\n    if (cfg.hasOwnProperty('usage')) { // eslint-disable-line no-prototype-builtins\n      this.#customUsage = cfg.usage\n    }\n\n    if (cfg.hasOwnProperty('disablehelp') && !cfg.hasOwnProperty('disableHelp')) { // eslint-disable-line no-prototype-builtins\n      cfg.disableHelp = cfg.disablehelp\n    }\n\n    if (cfg.hasOwnProperty('disableHelp') && cfg.disableHelp === true) { // eslint-disable-line no-prototype-builtins\n      this.#autohelp = false\n    }\n\n    if (typeof cfg.help === 'function' || typeof cfg.help === 'string') {\n      this.help = cfg.help\n    }\n\n    if (typeof cfg.usage === 'function' || typeof cfg.usage === 'string') {\n      this.usage = cfg.usage\n    }\n\n    if (cfg.hasOwnProperty('defaultHandler') && cfg.defaultHandler.toString() !== this.#defaultHandler.toString()) { // eslint-disable-line no-prototype-builtins\n      this.defaultHandler = cfg.defaultHandler\n    }\n\n    if (typeof cfg.arguments === 'string') {\n      cfg.arguments = cfg.arguments.split(/\\s+|\\t+|\\,+|\\;+/).map(arg => arg.trim()) // eslint-disable-line no-useless-escape\n    }\n\n    if (Array.isArray(cfg.arguments)) {\n      this.#arguments = new Set(cfg.arguments)\n    }\n\n    if (typeof cfg.url === 'string') {\n      this.#url = cfg.url\n    }\n\n    if (typeof cfg.support === 'string') {\n      this.#support = cfg.support\n    }\n\n    this.#name = (cfg.name || 'unknown').trim().split(/\\s+/)[0]\n    this.#description = cfg.description || null\n\n    if (Array.isArray(cfg.commands)) {\n      cfg.commands.forEach(cmd => this.add(cmd))\n    } else if (typeof cfg.commands === 'object') {\n      for (const key in cfg.commands) {\n        const data = cfg.commands[key]\n        data.name = key\n        this.add(data)\n      }\n    }\n\n    if (cfg.hasOwnProperty('middleware')) { // eslint-disable-line no-prototype-builtins\n      console.warn('The \"middleware\" attribute has been replaced with the \"use\" attribute.')\n      cfg.use = cfg.middleware\n      delete cfg.middleware\n    }\n\n    if (!cfg.hasOwnProperty('commonflag')) { // eslint-disable-line no-prototype-builtins\n      if (cfg.hasOwnProperty('commonFlag')) { // eslint-disable-line no-prototype-builtins\n        cfg.commonflag = cfg.commonFlag\n      } else if (cfg.hasOwnProperty('commonflags')) { // eslint-disable-line no-prototype-builtins\n        cfg.commonflag = cfg.commonflags\n      } else if (cfg.hasOwnProperty('commonFlag')) { // eslint-disable-line no-prototype-builtins\n        cfg.commonflag = cfg.commonFlag\n      } else if (cfg.hasOwnProperty('commonFlags')) { // eslint-disable-line no-prototype-builtins\n        cfg.commonflag = cfg.commonFlags\n      }\n    }\n\n    if (cfg.hasOwnProperty('commonflag')) { // eslint-disable-line no-prototype-builtins\n      if (typeof cfg.commonflag !== 'object') {\n        throw new Error('The \"commonflag\" configuration attribute must be an object.')\n      }\n    }\n\n    if (typeof cfg.plugins === 'object') {\n      this.#plugins = cfg.plugins\n    }\n\n    Object.defineProperties(this, {\n      __processors: {\n        enumerable: false,\n        get () {\n          return this.#processors\n        }\n      },\n      __commands: {\n        enumerable: false,\n        get () {\n          return this.#commands\n        }\n      },\n      __width: {\n        enumerable: false,\n        get () {\n          return this.#width\n        },\n        set (v) {\n          this.#width = v || 80\n        }\n      },\n      __commonflags: {\n        enumerable: false,\n        get () {\n          return this.#commonflags\n        },\n        set (value) {\n          this.#commonflags = value\n        }\n      },\n      arguments: {\n        enumerable: false,\n        get () {\n          return this.#arguments\n        }\n      },\n      initializeMiddleware: {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: code => {\n          if (typeof code === 'string') {\n            this.use(Function('return ' + code)()) // eslint-disable-line no-new-func\n          } else if (typeof code === 'function') {\n            this.use(code)\n          } else {\n            throw new Error('Invalid middleware: ' + code.toString())\n          }\n        }\n      },\n      initializeTrailer: {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: code => {\n          if (typeof code === 'string') {\n            this.trailer(Function('return ' + code)()) // eslint-disable-line no-new-func\n          } else if (typeof code === 'function') {\n            this.trailer(code)\n          } else {\n            throw new Error('Invalid trailer: ' + code.toString())\n          }\n        }\n      },\n      initializeHelpAnnotations: {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: cfg => {\n          if (cfg.hasOwnProperty('describeDefault') && typeof cfg.describeDefault === 'boolean') { // eslint-disable-line no-prototype-builtins\n            this.#display.Default = cfg.describeDefault\n          }\n          if (cfg.hasOwnProperty('describeOptions') && typeof cfg.describeOptions === 'boolean') { // eslint-disable-line no-prototype-builtins\n            this.#display.Options = cfg.describeOptions\n          }\n          if (cfg.hasOwnProperty('describeMultipleValues') && typeof cfg.describeMultipleValues === 'boolean') { // eslint-disable-line no-prototype-builtins\n            this.#display.MultipleValues = cfg.describeMultipleValues\n          }\n          if (cfg.hasOwnProperty('describeRequired') && typeof cfg.describeRequired === 'boolean') { // eslint-disable-line no-prototype-builtins\n            this.#display.Required = cfg.describeRequired\n          }\n        }\n      }\n    })\n\n    this.updateHelp()\n  }\n\n  get plugins () {\n    return this.#plugins\n  }\n\n  // @readonly\n  get name () {\n    return this.#name || 'Unknown'\n  }\n\n  // @readonly\n  get description () {\n    return this.#description || this.usage || ''\n  }\n\n  // @readonly\n  get url () {\n    return this.URL\n  }\n\n  // @readonly\n  get URL () {\n    const uri = (this.#url || '').trim()\n\n    if (uri.length === 0) {\n      if (this.hasOwnProperty('parent')) { // eslint-disable-line no-prototype-builtins\n        return this.parent.URL\n      } else if (this instanceof Command) {\n        return this.shell.URL\n      }\n    }\n\n    return uri\n  }\n\n  // @readonly\n  get support () {\n    const support = (this.#support || '').trim()\n\n    if (support.length === 0) {\n      if (this.hasOwnProperty('parent')) { // eslint-disable-line no-prototype-builtins\n        return this.parent.support\n      } else if (this instanceof Command) {\n        return this.shell.support\n      }\n    }\n\n    return support\n  }\n\n  get autohelp () {\n    return this.#autohelp\n  }\n\n  set autohelp (value) {\n    if (typeof value !== 'boolean') {\n      return\n    }\n    this.#autohelp = value\n    this.#processors.forEach(cmd => { cmd.autohelp = value })\n  }\n\n  updateHelp () {\n    this.#formattedDefaultHelp = new Formatter(this)\n    this.#formattedDefaultHelp.width = this.#width\n  }\n\n  describeHelp (attr, prop) {\n    if (this.#display[prop] !== null) {\n      return this.#display[prop]\n    }\n\n    if (this instanceof Command) {\n      if (this.shell && this.shell !== null && this.shell[attr] !== null) {\n        return this.shell[attr]\n      }\n\n      if (this.parent !== null) {\n        return this.parent[attr]\n      }\n    }\n\n    return true\n  }\n\n  get describeDefault () {\n    return this.describeHelp('describeDefault', 'Default')\n  }\n\n  get describeOptions () {\n    return this.describeHelp('describeOptions', 'Options')\n  }\n\n  get describeMultipleValues () {\n    return this.describeHelp('describeMultipleValues', 'MultipleValues')\n  }\n\n  get describeRequired () {\n    return this.describeHelp('describeRequired', 'Required')\n  }\n\n  get usage () {\n    if (this.#customUsage !== null) {\n      return typeof this.#customUsage === 'function' ? this.#customUsage() : this.#customUsage\n    }\n\n    return this.#formattedDefaultHelp.usage\n  }\n\n  set usage (value) {\n    if (typeof value === 'string' && value.trim().length === 0) {\n      value = null\n    }\n\n    this.#customUsage = value\n\n    this.updateHelp()\n  }\n\n  get help () {\n    if (this.#customHelp) {\n      return typeof this.#customHelp === 'function' ? this.#customHelp(this) : this.#customHelp\n    }\n\n    if (!this.autohelp) {\n      return ''\n    }\n\n    return this.#formattedDefaultHelp.help\n  }\n\n  set help (value) {\n    if (typeof value === 'string' && value.trim().length === 0) {\n      value = null\n    }\n\n    this.#customHelp = value\n\n    this.updateHelp()\n  }\n\n  // @private\n  set defaultHandler (value) {\n    if (typeof value === 'function') {\n      this.#defaultHandler = value\n      this.#hasCustomDefaultHandler = true\n      this.#processors.forEach(cmd => { cmd.defaultProcessor = value })\n    } else {\n      throw new Error(`Invalid default method (must be a function, not \"${typeof value}\").`)\n    }\n  }\n\n  get defaultHandler () {\n    return this.#defaultHandler\n  }\n\n  // @private\n  get hasCustomDefaultHandler () {\n    return this.#hasCustomDefaultHandler\n  }\n\n  get data () {\n    const commands = {}\n\n    Array.from(this.#processors.values()).forEach(cmd => {\n      const data = cmd.data\n      const name = data.name\n      delete data.name\n      commands[name] = data\n    })\n\n    return commands\n  }\n\n  get middleware () {\n    return this.#middleware\n  }\n\n  get trailers () {\n    return this.#trailer\n  }\n\n  get commands () {\n    return this.#processors\n  }\n\n  get commandlist () {\n    const list = new Set()\n    this.commands.forEach(cmd => {\n      list.add(cmd.name)\n      cmd.commandlist.forEach(subcmd => list.add(`${cmd.name} ${subcmd}`))\n    })\n\n    return Array.from(list).sort()\n  }\n\n  getCommand (name = null) {\n    if (!name) {\n      return null\n    }\n\n    const names = name.split(/\\s+/i)\n    let cmd = this.#commands.get(names.shift())\n    if (cmd) {\n      cmd = this.#processors.get(cmd)\n      for (const nm of names) {\n        cmd = cmd.getCommand(nm)\n      }\n    }\n\n    return cmd instanceof Command ? cmd : null\n  }\n\n  remove () {\n    for (const cmd of arguments) {\n      if (typeof cmd === 'symbol') {\n        this.#processors.delete(cmd)\n        this.#commands.forEach(oid => oid === cmd && this.#commands.delete(oid))\n      }\n\n      if (typeof cmd === 'string') {\n        const OID = this.#commands.get(cmd)\n        if (OID) {\n          this.remove(OID)\n        }\n      }\n    }\n  }\n\n  use () {\n    for (const arg of arguments) {\n      if (typeof arg !== 'function') {\n        throw new Error(`All \"use()\" arguments must be valid functions.\\n${arg.toString().substring(0, 50)} ${arg.toString().length > 50 ? '...' : ''}`)\n      }\n\n      this.#middleware.use(arg)\n    }\n\n    this.#processors.forEach(subCmd => subCmd.use(...arguments))\n  }\n\n  trailer () {\n    this.#trailer = this.#trailer || new Middleware()\n\n    for (const arg of arguments) {\n      if (typeof arg !== 'function') {\n        throw new Error(`All \"trailer()\" arguments must be valid functions.\\n${arg.toString().substring(0, 50)} ${arg.toString().length > 50 ? '...' : ''}`)\n      }\n\n      this.#trailer.use(arg)\n    }\n\n    this.#processors.forEach(subCmd => subCmd.trailer(...arguments))\n  }\n\n  add () {\n    for (let command of arguments) {\n      if (!(command instanceof Command)) {\n        if (typeof command === 'object') {\n          command = new Command(command)\n        } else {\n          throw new Error('Invalid argument. Only \"Command\" instances may be added to the processor.')\n        }\n      }\n\n      command.autohelp = this.autohelp\n\n      if (this instanceof Shell) {\n        command.shell = this\n      } else if (this instanceof Command) {\n        command.parent = this\n      }\n\n      this.#processors.set(command.OID, command)\n      this.#commands.set(command.name, command.OID)\n\n      command.aliases.forEach(alias => this.#commands.set(alias, command.OID))\n    }\n  }\n}\n","// const STRIP_EQUAL_SIGNS = /(\\=+)(?=([^'\"\\\\]*(\\\\.|['\"]([^'\"\\\\]*\\\\.)*[^'\"\\\\]*['\"]))*[^'\"]*$)/g\n\nconst SUBCOMMAND_PATTERN = /^([^\"'][\\S\\b]+)[\\s+]?([^-].*)$/i // eslint-disable-line no-useless-escape\nconst FLAG_PATTERN = /((?:\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'|\\/[^\\/\\\\]*(?:\\\\[\\S\\s][^\\/\\\\]*)*\\/[gimy]*(?=\\s|$)|(?:\\\\\\s|\\S))+)(?=\\s|$)/g // eslint-disable-line no-useless-escape\nconst METHOD_PATTERN = /^([\\w]+\\s?)\\(.*\\)\\s?{/i // eslint-disable-line no-useless-escape\nconst STRIP_QUOTE_PATTERN = /\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"|\\'([^\\'\\\\]*(\\\\.[^\\'\\\\]*)*)\\'/ig // eslint-disable-line no-useless-escape\nconst COMMAND_PATTERN = /^(\\w+)\\s+([\\s\\S]+)?/i // eslint-disable-line no-useless-escape\nconst CONSTANTS = Object.freeze({\n  SUBCOMMAND_PATTERN,\n  FLAG_PATTERN,\n  METHOD_PATTERN,\n  STRIP_QUOTE_PATTERN,\n  COMMAND_PATTERN\n})\n\nexport {\n  CONSTANTS as default,\n  CONSTANTS,\n  SUBCOMMAND_PATTERN,\n  FLAG_PATTERN,\n  METHOD_PATTERN,\n  STRIP_QUOTE_PATTERN,\n  COMMAND_PATTERN\n}\n","import Command from './command.js'\nimport Base from './base.js'\nimport { COMMAND_PATTERN } from './utility.js'\n\nexport default class Shell extends Base {\n  #middlewareGroups = new Map()\n  #history = []\n  #maxHistoryItems\n  #version\n  #cursor = 0\n  #tabWidth\n  #runtime = globalThis.hasOwnProperty('window') // eslint-disable-line no-prototype-builtins\n    ? 'browser'\n    : (\n      globalThis.hasOwnProperty('process') && // eslint-disable-line no-prototype-builtins\n      globalThis.process.release &&\n      globalThis.process.release.name\n        ? globalThis.process.release.name\n        : 'unknown'\n    )\n\n  constructor (cfg = { maxhistory: 100 }) {\n    super(cfg)\n\n    this.initializeHelpAnnotations(cfg)\n\n    this.__commonflags = cfg.commonflags || {}\n\n    if (cfg.hasOwnProperty('use') && Array.isArray(cfg.use)) { // eslint-disable-line no-prototype-builtins\n      cfg.use.forEach(code => this.initializeMiddleware(code))\n    }\n\n    if (cfg.hasOwnProperty('trailer') && Array.isArray(cfg.trailer)) { // eslint-disable-line no-prototype-builtins\n      cfg.trailer.forEach(code => this.initializeTrailer(code))\n    }\n\n    this.#version = cfg.version || '1.0.0'\n    this.#maxHistoryItems = cfg.maxhistory || cfg.maxHistoryItems || 100\n    this.#tabWidth = cfg.hasOwnProperty('tabWidth') ? cfg.tabWidth : 4 // eslint-disable-line no-prototype-builtins\n\n    // This sets a global symbol that dev tools can find.\n    globalThis[Symbol('SHELL_INTEGRATIONS')] = this\n  }\n\n  get data () {\n    const commands = super.data\n\n    return {\n      name: this.name,\n      description: this.description,\n      version: this.version,\n      commands,\n      use: this.middleware.data,\n      trailer: this.trailers.data,\n      help: this.help,\n      usage: this.usage,\n      defaultHandler: this.defaultHandler.toString(),\n      disableHelp: !this.autohelp,\n      runtime: this.#runtime,\n      maxHistoryItems: this.#maxHistoryItems\n    }\n  }\n\n  get version () {\n    return this.#version || 'Unknown'\n  }\n\n  set tableWidth (value) {\n    this.__width = value\n  }\n\n  get tableWidth () {\n    return this.__width\n  }\n\n  history (count = null) {\n    if (this.#history.length === 0) {\n      return []\n    }\n\n    return count === null ? this.#history.slice() : this.#history.slice(0, count)\n  }\n\n  priorCommand (count = 0) {\n    if (this.#history.length === 0) {\n      return null\n    }\n\n    if (count < 0) {\n      return this.nextCommand(Math.abs(count))\n    }\n\n    count = count % this.#history.length\n\n    this.#cursor += count\n\n    if (this.#cursor >= this.#history.length) {\n      this.#cursor = this.#history.length - 1\n    }\n\n    return this.#history[this.#cursor].input\n  }\n\n  nextCommand (count = 1) {\n    if (this.#history.length === 0) {\n      return null\n    }\n\n    if (count < 0) {\n      return this.priorCommand(Math.abs(count))\n    }\n\n    count = count % this.#history.length\n\n    this.#cursor -= count\n    if (this.#cursor < 0) {\n      this.#cursor = 0\n      return undefined\n    }\n\n    return this.#history[this.#cursor].input\n  }\n\n  useWith (commands) {\n    if (arguments.length < 2) {\n      throw new Error('useWith([\\'command\\', \\'command\\'], fn) requires two or more arguments.')\n    }\n\n    commands = typeof commands === 'string' ? commands.split(/\\s+/) : commands\n\n    if (!Array.isArray(commands) || commands.filter(c => typeof c !== 'string').length > 0) {\n      throw new Error(`The first argument of useWith must be a string or array of strings. Received ${typeof commands}`)\n    }\n\n    const fns = Array.from(arguments).slice(1)\n\n    commands.forEach(cmd => this.#middlewareGroups.set(cmd.trim(), (this.#middlewareGroups.get(cmd.trim()) || []).concat(fns)))\n  }\n\n  useExcept (commands) {\n    if (arguments.length < 2) {\n      throw new Error('useExcept([\\'command\\', \\'command\\'], fn) requires two or more arguments.')\n    }\n\n    commands = typeof commands === 'string' ? commands.split(/\\s+/) : commands\n\n    if (!Array.isArray(commands) || commands.filter(c => typeof c !== 'string').length > 0) {\n      throw new Error(`The first argument of useExcept must be a string or array of strings. Received ${typeof commands}`)\n    }\n\n    const fns = Array.from(arguments).slice(1)\n    const all = new Set(this.commandlist.map(i => i.toLowerCase()))\n\n    commands.forEach(cmd => {\n      all.delete(cmd)\n      for (const c of all) {\n        if (c.indexOf(cmd) === 0) {\n          all.delete(c)\n        }\n      }\n    })\n\n    this.useWith(Array.from(all), ...fns)\n  }\n\n  async exec (input, callback) {\n    // The array check exists because people are passing process.argv.slice(2) into this\n    // method, often forgetting to join the values into a string.\n    if (Array.isArray(input)) {\n      input = input.map(i => {\n        if (i.indexOf(' ') >= 0 && !/^[\\\"\\'].+ [\\\"\\']$/.test(i)) {\n          return `\"${i}\"`\n        } else {\n          return i\n        }\n      }).join(' ')\n    }\n\n    this.#history.unshift({ input, time: new Date().toLocaleString() })\n\n    if (this.#history.length > this.#maxHistoryItems) {\n      this.#history.pop()\n    }\n\n    let parsed = COMMAND_PATTERN.exec(input + ' ')\n\n    if (parsed === null) {\n      if (input.indexOf('version') !== -1 || input.indexOf('-v') !== -1) {\n        return console.log(this.version)\n      } else if (input.indexOf('help') !== -1) {\n        return console.log(this.help)\n      }\n\n      return Command.stderr(this.help)\n    }\n\n    parsed = parsed.filter(item => item !== undefined)\n\n    const cmd = parsed[1]\n    const args = parsed.length > 2 ? parsed[2] : ''\n    // const command = null\n\n    const action = this.__commands.get(cmd)\n\n    if (!action) {\n      if (cmd.toLowerCase() === 'version') {\n        return console.log(this.version)\n      }\n\n      return Command.stderr(this.help)\n    }\n\n    const processor = this.__processors.get(action)\n\n    if (!processor) {\n      return Command.stderr('Command not found.')\n    }\n\n    const term = processor.getTerminalCommand(args)\n    return await Command.reply(await term.command.run(term.arguments, callback))\n  }\n\n  getCommandMiddleware (cmd) {\n    const results = []\n    cmd.split(/\\s+/).forEach((c, i, a) => {\n      const r = this.#middlewareGroups.get(a.slice(0, i + 1).join(' '))\n      r && results.push(r.flat(Infinity))\n    })\n\n    return results.flat(Infinity)\n  }\n\n  clearHistory () {\n    this.#history = []\n  }\n\n  // Clear the terminal\n  clear () {\n    this.#history = []\n    console.clear()\n    // .write('\\x1b[0f') // regular clear\n    // .write('\\x1b[2J') // full clear\n    // .write('\\033[0;0f') //ubuntu\n  }\n}\n","// import { Parser } from '../../../@author.io/arg/index.js'\nimport { Parser } from '@author.io/arg'\nimport Shell from './shell.js'\nimport Base from './base.js'\nimport { METHOD_PATTERN, FLAG_PATTERN, STRIP_QUOTE_PATTERN } from './utility.js'\n\nexport default class Command extends Base {\n  #pattern\n  #oid\n  #aliases = new Set()\n  #fn\n  #flagConfig = {}\n  #parent = null\n  #shell = null\n\n  constructor (cfg = {}) {\n    if (cfg.hasOwnProperty('handler')) { // eslint-disable-line no-prototype-builtins\n      if (typeof cfg.handler === 'string') {\n        cfg.handler = Function('return (' + cfg.handler.replace('function anonymous', 'function') + ').call(this)').call(globalThis) // eslint-disable-line no-new-func\n      }\n\n      if (typeof cfg.handler !== 'function') {\n        throw new Error('Invalid command configuration. A \"handler\" function is required.')\n      }\n    }\n\n    super(cfg)\n\n    if (cfg.hasOwnProperty('use') && Array.isArray(cfg.use)) { // eslint-disable-line no-prototype-builtins\n      cfg.use.forEach(code => this.initializeMiddleware(code))\n    }\n\n    if (cfg.hasOwnProperty('trailer') && Array.isArray(cfg.trailer)) { // eslint-disable-line no-prototype-builtins\n      cfg.trailer.forEach(code => this.initializeTrailer(code))\n    }\n\n    this.initializeHelpAnnotations(cfg)\n\n    this.#fn = cfg.handler\n    this.#oid = Symbol(((cfg.name || cfg.usage) || cfg.pattern) || 'command')\n    this.#pattern = cfg.pattern || /[\\s\\S]+/i\n\n    if (cfg.alias && !cfg.aliases) {\n      cfg.aliases = typeof cfg.alias === 'string' ? [cfg.alias] : (Array.isArray(cfg.alias) ? cfg.alias : Array.from(cfg.alias))\n      delete cfg.alias\n    }\n\n    if (cfg.aliases) {\n      if (!Array.isArray(cfg.aliases)) {\n        throw new Error('The alias property only accepts an array.')\n      }\n\n      this.#aliases = new Set(cfg.aliases)\n    }\n\n    if (cfg.flags) {\n      if (typeof cfg.flags !== 'object') {\n        throw new Error(`Invalid flag configuration (expected and object, received ${typeof cfg.flags}).`)\n      }\n\n      for (const [key, value] of Object.entries(cfg.flags)) {\n        if (value.hasOwnProperty('alias')) { // eslint-disable-line no-prototype-builtins\n          value.aliases = value.aliases || []\n\n          if (Array.isArray(value.alias)) {\n            value.aliases = Array.from(new Set(...value.aliases, ...value.alias))\n            if (value.aliases.filter(a => typeof a !== 'string') > 0) {\n              throw new Error(`${key} flag aliases must be strings. Type failure on: ${value.aliases.filter(a => typeof a !== 'string').join(', ')}.`)\n            }\n          } else if (typeof value.alias === 'string') {\n            value.aliases.push(value.alias)\n          } else {\n            throw new Error(`Aliases must be strings, not ${typeof value.alias} (${key} flag).`)\n          }\n\n          delete value.alias\n        }\n      }\n\n      this.#flagConfig = cfg.flags\n    }\n\n    if (Array.isArray(cfg.subcommands)) {\n      this.add(...cfg.subcommands)\n    }\n\n    const attributes = new Set([\n      'commands',\n      'subcommands',\n      'plugins',\n      'defaultHandler',\n      'disableHelp',\n      'describeDefault',\n      'describeOptions',\n      'describeMultipleValues',\n      'describeRequired',\n      'flags',\n      'alias',\n      'aliases',\n      'description',\n      'help',\n      'usage',\n      'pattern',\n      'name',\n      'handler',\n      'middleware',\n      'use',\n      'arguments',\n      'commonflag',\n      'commonflags',\n      'trailer',\n      'url',\n      'support'\n    ])\n\n    const unrecognized = Object.keys(cfg).filter(attribute => !attributes.has(attribute))\n\n    if (unrecognized.length > 0) {\n      throw new Error(`Unrecognized configuration attribute(s): ${unrecognized.join(', ')}`)\n    }\n\n    const ignoreFlags = commonFlags => {\n      if (commonFlags.ignore && (Array.isArray(commonFlags.ignore) || typeof commonFlags.ignore === 'string')) {\n        const ignore = new Set(Array.isArray(commonFlags.ignore) ? commonFlags.ignore : [commonFlags.ignore])\n        // delete commonFlags.ignore\n        const root = this.commandroot.replace(new RegExp(`^${this.shell.name}\\\\s+`, 'i'), '')\n\n        for (const cmd of ignore) {\n          if (root.startsWith(cmd)) {\n            commonFlags = {}\n            break\n          }\n        }\n      }\n\n      return commonFlags\n    }\n\n    Object.defineProperties(this, {\n      __commonFlags: {\n        enumerable: false,\n        get () {\n          let flags = ignoreFlags(this.__commonflags) // Object.assign({}, this.__commonflags, this.#flagConfig)\n\n          if (this.parent !== null) {\n            flags = Object.assign(flags, this.parent.__commonFlags)\n          }\n\n          const result = Object.assign({}, this.shell !== null ? ignoreFlags(this.shell.__commonflags) : {}, flags)\n\n          if (Array.isArray(result.ignore) || typeof result.ignore === 'string') {\n            delete result.ignore\n          }\n\n          return result\n        }\n      },\n      __flagConfig: {\n        enumerable: false,\n        get () {\n          const flags = new Map(Object.entries(Object.assign(this.__commonFlags, this.#flagConfig || {})))\n          flags.delete('help')\n          return flags\n        }\n      },\n      getTerminalCommand: {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: input => {\n          const args = input.trim().split(/\\t+|\\s+/)\n          let cmd = this\n\n          while (args.length > 0) {\n            const arg = args[0]\n            const subcmd = cmd.getCommand(arg)\n            if (subcmd) {\n              cmd = subcmd\n              args.shift()\n            } else {\n              break\n            }\n          }\n\n          return {\n            command: cmd,\n            arguments: args.join(' ')\n          }\n        }\n      }\n    })\n\n    this.__commonflags = cfg.commonflags || {}\n\n    this.__width = this.shell === null ? 80 : this.shell.tableWidth || 80\n\n    this.updateHelp()\n  }\n\n  get data () {\n    const commands = super.data\n\n    let handler = (this.#fn || this.defaultHandler).toString()\n    if (METHOD_PATTERN.test(handler)) {\n      handler = handler.replace(METHOD_PATTERN.exec(handler)[1], 'function ')\n    }\n\n    const flags = Object.assign(this.__commonFlags, this.#flagConfig || {})\n\n    for (const [key, value] of Object.entries(flags)) { // eslint-disable-line no-unused-vars\n      value.aliases = value.aliases || []\n\n      if (value.hasOwnProperty('alias')) { // eslint-disable-line no-prototype-builtins\n        if (value.aliases.indexOf(value.alias) < 0) {\n          value.aliases.push(value.alias)\n        }\n      }\n\n      delete value.alias\n    }\n\n    // Apply any missing default values to flags.\n    Object.keys(flags).forEach(name => { flags[name] = Object.assign(this.getFlagConfiguration(name), flags[name]) })\n\n    const data = {\n      name: this.name,\n      description: this.description,\n      help: this.help,\n      usage: this.usage,\n      aliases: Array.from(this.#aliases),\n      flags,\n      handler,\n      commands,\n      disableHelp: !this.autohelp,\n      use: this.middleware.data,\n      trailer: this.trailers.data\n    }\n\n    for (const [key, value] of Object.entries(data.flags)) { // eslint-disable-line no-unused-vars\n      delete value.alias\n    }\n\n    return data\n  }\n\n  set parent (cmd) {\n    if (cmd instanceof Command) {\n      this.#parent = cmd\n    } else {\n      throw new Error(`Cannot set parent of \"${this.name}\" command to anything other than another command. To make this command a direct descendent of the main shell, use the shell attribute instead.`)\n    }\n  }\n\n  get parent () {\n    return this.#parent\n  }\n\n  set shell (shell) {\n    if (!shell) {\n      throw new Error(`Cannot set shell of ${this.name} command to a non-Shell object.`)\n    }\n    if (shell instanceof Shell) {\n      this.#shell = shell\n      this.__width = this.shell === null ? 80 : shell.tableWidth\n    } else {\n      throw new Error(`Expected a Shell object, received a \"${typeof shell}\" object.`)\n    }\n  }\n\n  get shell () {\n    if (!this.#shell) {\n      if (this.#parent) {\n        return this.#parent.shell\n      }\n\n      return null\n    }\n\n    return this.#shell\n  }\n\n  get plugins () {\n    return Object.assign({}, this.shell.plugins, this.parent ? this.parent.plugins : {}, super.plugins)\n  }\n\n  get commandroot () {\n    if (this.#parent) {\n      return `${this.#parent.commandroot} ${this.name}`.trim()\n    }\n\n    if (this.#shell) {\n      return `${this.#shell.name} ${this.name}`.trim()\n    }\n\n    return this.name\n  }\n\n  set aliases (value) {\n    if (!value) {\n      this.#aliases = []\n      return\n    }\n\n    if (typeof value === 'object') {\n      switch (value.constructor.name.toLowerCase()) {\n        case 'map':\n          value = Array.from(value.keys())\n          break\n        case 'set':\n          value = Array.from(value)\n          break\n        case 'object':\n          value = Object.keys(value).filter(item => typeof item === 'string')\n          break\n        case 'array':\n          break\n        case 'string':\n          value = value.split(/\\s+/)[0]\n          break\n        default:\n          throw new Error('Invalid alias value. Use an array of strings.')\n      }\n    }\n\n    this.#aliases = Array.from(new Set(value)) // This conversion deduplicates the value\n  }\n\n  get aliases () {\n    return Array.from(this.#aliases) || []\n  }\n\n  get OID () {\n    return this.#oid\n  }\n\n  addFlag (name, cfg) {\n    if (typeof name !== 'string') {\n      if (!cfg.hasOwnProperty('name')) { // eslint-disable-line no-prototype-builtins\n        throw new Error('Invalid flag name (should be a string).')\n      } else {\n        name = cfg.name\n      }\n    }\n\n    this.#flagConfig[name] = cfg\n  }\n\n  removeFlag (name) {\n    delete this.#flagConfig[name]\n  }\n\n  getFlagConfiguration (name) {\n    let flag = this.__flagConfig.get(name)\n    if (!flag) {\n      for (const [f, cfg] of this.__flagConfig) { // eslint-disable-line no-unused-vars\n        if ((cfg.aliases && cfg.aliases.indexOf(name) >= 0) || (cfg.alias && cfg.alias === flag)) {\n          flag = cfg\n          break\n        }\n      }\n\n      if (!flag) {\n        return null\n      }\n    }\n\n    return {\n      description: flag.description,\n      required: flag.hasOwnProperty('required') ? flag.required : false, // eslint-disable-line no-prototype-builtins\n      aliases: flag.aliases || [flag.alias].filter(i => i !== null),\n      type: flag.type === undefined ? 'string' : (typeof flag.type === 'string' ? flag.type : flag.type.name.toLowerCase()),\n      options: flag.hasOwnProperty('options') ? flag.options : null, // eslint-disable-line no-prototype-builtins\n      allowMultipleValues: flag.hasOwnProperty('allowMultipleValues') ? flag.allowMultipleValues : false // eslint-disable-line no-prototype-builtins\n    }\n  }\n\n  supportsFlag (name) {\n    return this.#flagConfig.hasOwnProperty(name) // eslint-disable-line no-prototype-builtins\n  }\n\n  deepParse (input) {\n    const meta = this.parse(input)\n\n    if (this.__commands.size === 0) {\n      return meta\n    }\n\n    if (meta.input.trim().length === 0) {\n      return meta\n    }\n\n    const args = meta.input.split(/\\s+/)\n    const subcmd = this.__commands.get(args.shift())\n\n    if (!subcmd) {\n      return meta\n    }\n\n    return this.__processors.get(subcmd).deepParse(args.join(' '))\n  }\n\n  parse (input) {\n    // Parse the command input for flags\n    const data = { command: this.name, input: input.trim() }\n    const flagConfig = Object.assign(this.__commonFlags, this.#flagConfig || {})\n\n    if (!flagConfig.hasOwnProperty('help')) { // eslint-disable-line no-prototype-builtins\n      flagConfig.help = {\n        description: `Display ${this.name} help.`,\n        // aliases: ['h'],\n        default: false,\n        type: 'boolean'\n      }\n    }\n\n    const flags = Array.from(FLAG_PATTERN[Symbol.matchAll](input), x => x[0])\n    const parser = new Parser(flags, flagConfig)\n    const pdata = parser.data\n    const recognized = {}\n\n    parser.recognizedFlags.forEach(flag => { recognized[flag] = pdata[flag] })\n    parser.unrecognizedFlags.forEach(arg => delete recognized[arg])\n\n    data.flags = { recognized, unrecognized: parser.unrecognizedFlags }\n    data.valid = parser.valid\n    data.violations = parser.violations\n\n    data.parsed = {}\n    if (Object.keys(pdata.flagSource).length > 0) {\n      for (const [key, src] of Object.entries(pdata.flagSource)) { // eslint-disable-line no-unused-vars\n        data.parsed[src.name] = src.inputName\n      }\n    }\n\n    data.help = {\n      requested: recognized.help\n    }\n\n    if (recognized.help) {\n      data.help.message = this.help\n    }\n\n    const args = Array.from(this.arguments)\n\n    Object.defineProperties(data, {\n      flag: {\n        enumerable: true,\n        configurable: false,\n        writable: false,\n        value: name => {\n          try {\n            if (typeof name === 'number') {\n              return Array.from(parser.unrecognizedFlags)[name]\n            } else {\n              if (data.flags.recognized.hasOwnProperty(pdata.flagSource[name].name)) { // eslint-disable-line no-prototype-builtins\n                return data.flags.recognized[pdata.flagSource[name].name]\n              } else {\n                return pdata.flagSource[name].value\n              }\n            }\n          } catch (e) {\n            if (this.arguments.has(name)) {\n              return Array.from(parser.unrecognizedFlags)[args.indexOf(name)]\n            }\n\n            return undefined\n          }\n        }\n      },\n      command: {\n        enumerable: true,\n        get: () => this\n      },\n      shell: {\n        enumerable: true,\n        get: () => this.shell\n      },\n      data: {\n        enumerable: true,\n        get () {\n          const uf = parser.unrecognizedFlags\n          const result = Object.assign({}, recognized)\n          delete result.help\n\n          args.forEach((name, i) => {\n            const value = uf[i]\n            let normalizedValue = Object.keys(pdata).filter(key => key.toLowerCase() === value)\n            normalizedValue = (normalizedValue.length > 0 ? normalizedValue.pop() : value)\n\n            if (normalizedValue !== undefined) {\n              normalizedValue = normalizedValue.trim()\n\n              if (STRIP_QUOTE_PATTERN.test(normalizedValue)) {\n                normalizedValue = normalizedValue.substring(1, normalizedValue.length - 1)\n              }\n            }\n\n            if (result.hasOwnProperty(name)) { // eslint-disable-line no-prototype-builtins\n              result[name] = Array.isArray(result[name]) ? result[name] : [result[name]]\n              result[name].push(normalizedValue)\n            } else {\n              result[name] = normalizedValue\n            }\n          })\n\n          if (uf.length > args.length) {\n            uf.slice(args.length)\n              .forEach((flag, i) => {\n                let name = `unknown${i + 1}`\n                while (result.hasOwnProperty(name)) { // eslint-disable-line no-prototype-builtins\n                  const number = name.substring(7)\n                  name = 'unknown' + (parseInt(number) + 1)\n                }\n\n                result[name] = flag\n              })\n          }\n\n          return result\n        }\n      }\n    })\n\n    Object.defineProperty(data.help, 'default', {\n      enumerable: true,\n      get: () => this.help\n    })\n\n    return data\n  }\n\n  async run (input, callback) {\n    const fn = (this.#fn || this.defaultHandler).bind(this)\n    const data = typeof input === 'string' ? this.parse(input) : input\n\n    arguments[0] = this.deepParse(input)\n    arguments[0].plugins = this.plugins\n\n    if (this.shell !== null) {\n      const parentMiddleware = this.shell.getCommandMiddleware(this.commandroot.replace(new RegExp(`^${this.shell.name}`, 'i'), '').trim())\n\n      if (parentMiddleware.length > 0) {\n        this.middleware.use(...parentMiddleware)\n      }\n    }\n\n    const trailers = this.trailers\n\n    if (arguments[0].help && arguments[0].help.requested) {\n      console.log(this.help)\n\n      if (trailers.size > 0) {\n        trailers.run(arguments[0])\n      }\n\n      return\n    }\n\n    // No subcommand was recognized\n    if (this.middleware.size > 0) {\n      this.middleware.run(arguments[0], async meta => await Command.reply(fn(meta, callback)))\n\n      if (trailers.size > 0) {\n        trailers.run(arguments[0])\n      }\n\n      return\n    }\n\n    // Command.reply(fn(arguments[0], callback))\n    data.plugins = this.plugins\n    Command.reply(fn(data, callback))\n\n    if (trailers.size > 0) {\n      trailers.run(arguments[0])\n    }\n  }\n\n  static stderr (err) {\n    if (err instanceof Error) {\n      return new Promise((resolve, reject) => reject(err)).catch(console.error)\n    }\n\n    return new Promise((resolve, reject) => reject(err)).catch(console.error)\n  }\n\n  static reply (callback) {\n    return new Promise((resolve, reject) => {\n      try {\n        if (typeof callback === 'function') {\n          callback()\n        }\n\n        resolve()\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n}\n","import Command from './command.js'\nimport Shell from './shell.js'\nimport Middleware from './middleware.js'\nimport { Formatter, Table } from './format.js'\nconst all = { Shell, Command, Formatter, Table, Middleware }\nexport { Command, Shell, Formatter, Table, Middleware, all as default }\n"],"names":["Middleware","constructor","Object","defineProperties","this","_data","enumerable","configurable","value","go","writable","args","pop","apply","length","use","method","methodBody","toString","indexOf","push","stack","next","bind","run","Array","from","arguments","Formatter","data","desc","_classPrivateFieldGet","description","trim","Command","aliases","out","commandroot","join","__flagConfig","size","map","i","__processors","Table","replace","output","Shell","name","rows","values","cmd","concat","result","table","usage","flags","forEach","cfg","flag","alias","a","dsc","hasOwnProperty","describeOptions","options","allowMultipleValues","describeMultipleValues","describeDefault","default","required","describeRequired","unshift","subcommands","Base","Set","Map","Default","Options","MultipleValues","Required","meta","parent","hasCustomDefaultHandler","defaultHandler","shell","console","log","help","Error","disableHelp","disablehelp","split","arg","isArray","url","support","commands","add","key","warn","middleware","commonflag","commonFlag","commonflags","commonFlags","plugins","get","__commands","__width","set","v","__commonflags","initializeMiddleware","code","Function","initializeTrailer","trailer","initializeHelpAnnotations","updateHelp","URL","uri","autohelp","width","describeHelp","attr","prop","defaultProcessor","list","commandlist","subcmd","sort","getCommand","names","shift","nm","remove","delete","oid","OID","substring","subCmd","command","FLAG_PATTERN","METHOD_PATTERN","STRIP_QUOTE_PATTERN","COMMAND_PATTERN","freeze","SUBCOMMAND_PATTERN","maxhistory","globalThis","process","release","version","maxHistoryItems","tabWidth","Symbol","super","trailers","runtime","history","count","slice","priorCommand","nextCommand","Math","abs","input","useWith","filter","c","fns","useExcept","all","toLowerCase","callback","test","time","Date","toLocaleString","parsed","exec","stderr","item","undefined","action","processor","term","getTerminalCommand","reply","getCommandMiddleware","results","r","flat","Infinity","clearHistory","clear","handler","call","pattern","entries","attributes","unrecognized","keys","attribute","has","ignoreFlags","ignore","root","RegExp","startsWith","__commonFlags","assign","tableWidth","getFlagConfiguration","addFlag","removeFlag","f","type","supportsFlag","deepParse","parse","flagConfig","matchAll","x","parser","Parser","pdata","recognized","recognizedFlags","unrecognizedFlags","valid","violations","flagSource","src","inputName","requested","message","e","uf","normalizedValue","number","parseInt","defineProperty","fn","parentMiddleware","async","err","Promise","resolve","reject","catch","error"],"mappings":"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"}